<script>
    function onFileChange(event) {
        console.log(event)
        const file = event.target.files[0]
        console.log(file)

        const imageSrc = window.URL.createObjectURL(file)

        document.getElementById('selectedImage').src = imageSrc
        document.getElementById('selectedImage').style.display = 'block'
    }
</script>

<div style="background-color: rgb(238, 238, 238); 
    padding: 24px">

    <!-- Vue.js -->

    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <div id="app">
        <div v-for="p in posts">
            <div style="background-color: white; padding: 16px;
                margin-bottom: 12px; border-radius: 6px;
                display: flex; flex-direction: column;">

                <div style="font-weight: bold;">
                    {{p.user.fullName}}
                </div>

                <div style="color: rgb(186, 186, 186)">
                    {{toLocale(p.createdAt)}}
                </div>

                <div style="margin-bottom: 12px">
                    {{p.text}}
                </div>

                <div>
                    <img style="max-width: 100%; margin-bottom: 12px;" :src="p.imageUrl">
                </div>

                <button v-on:click="handleDeletePost(p)" 
                style="background-color: red; color: white; border-radius: 6px;"> Delete post</button>
            </div>
        </div>
    </div>

    <%- /* Expose locals as 'window.SAILS_LOCALS' :: */ exposeLocalsToBrowser() %>

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script>
        const App = new Vue({
            el: "#app",
            data: {
                posts: window.SAILS_LOCALS.allPosts
            },
            methods: {
                handleDeletePost: async function(post) {

                    const postId = post.id
                    // axios.delete('/post/' + postId)
                    try {
                        await axios.delete(`/post/${postId}`)

                        this.posts = this.posts.filter(p=> {
                            return p.id != post.id
                        })
                    } catch (err) {
                        console.error(err.toString())
                    }
                },
                toLocale: function(createdAt) {
                    return new Date(createdAt).toLocaleTimeString() + " " + new Date(createdAt).toLocaleDateString()
                }
            }
        })
    </script>


</div>